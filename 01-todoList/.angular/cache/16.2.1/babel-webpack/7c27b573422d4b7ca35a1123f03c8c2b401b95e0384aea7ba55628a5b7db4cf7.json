{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/session.service\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"role\"];\nexport class LoginPageComponent {\n  constructor(sessionService) {\n    this.sessionService = sessionService;\n    this.userSession = [];\n    this.username = '';\n  }\n  get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n  onSubmit(formValues) {\n    //this.sessionService.login(this.username, this.role);\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.SessionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"login-page\"]],\n  viewQuery: function LoginPageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tagInput = _t.first);\n    }\n  },\n  inputs: {\n    username: \"username\"\n  },\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"col-md-4\", \"mx-auto\", \"pt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"submit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Nombre de Usuario\", 1, \"form-control\", 3, \"value\"], [\"username\", \"\"], [1, \"form-check\"], [\"ngModel\", \"\", \"type\", \"radio\", \"id\", \"roleAdmin\", \"name\", \"role\", \"value\", \"true\", 1, \"form-check-input\"], [\"for\", \"roleAdmin\", 1, \"form-check-label\"], [\"ngModel\", \"\", \"type\", \"radio\", \"id\", \"roleUser\", \"name\", \"role\", \"value\", \"false\", 1, \"form-check-input\"], [\"for\", \"roleUser\", 1, \"form-check-label\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"submit\", function LoginPageComponent_Template_form_submit_6_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Nombre de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"hr\");\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\");\n      i0.ɵɵtext(16, \"Rol de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 10);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementStart(19, \"label\", 12);\n      i0.ɵɵtext(20, \" Admin \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 10);\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementStart(23, \"label\", 14);\n      i0.ɵɵtext(24, \" Usuario \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"div\", 15)(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Entrar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"value\", _r1.value);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["LoginPageComponent","constructor","sessionService","userSession","username","isLoggin","storageUserSession","onSubmit","formValues","i0","ɵɵdirectiveInject","i1","SessionService","selectors","viewQuery","LoginPageComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPageComponent_Template_form_submit_6_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","value","ɵɵelement","ɵɵadvance","ɵɵproperty","_r1"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.html"],"sourcesContent":["import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { SessionService } from '../../services/session.service';\nimport { UserSession } from 'src/app/interfaces/users.interface';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html'\n})\nexport class LoginPageComponent {\n\n  public userSession: UserSession[] = [];\n\n  constructor(private readonly sessionService: SessionService) { }\n\n  @Input()\n  public username: string = '';\n\n  @ViewChild('role')\n  tagInput!: ElementRef<HTMLInputElement>;\n\n  public get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n\n  onSubmit(formValues:any){\n    \n    //this.sessionService.login(this.username, this.role);\n  }\n\n\n\n\n}\n","<div class=\"col-md-4 mx-auto pt-5\">\n    <div class=\"card\">\n        \n        <div class=\"card-header\">\n            <span>Login</span>\n        </div>\n\n        <div class=\"card-body\">\n\n            <form #loginForm=\"ngForm\" (submit)=\"onSubmit(loginForm.value)\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nombre de usuario:</label>\n                    <input type=\"text\" name=\"username\" id=\"username\" #username [value]=\"username.value\" class=\"form-control\" placeholder=\"Nombre de Usuario\">\n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Rol de usuario:</label>\n                    <div class=\"form-check\">\n                        <input ngModel type=\"radio\" id=\"roleAdmin\" name=\"role\" value=\"true\" class=\"form-check-input\">\n                        <label class=\"form-check-label\" for=\"roleAdmin\">\n                            Admin\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input ngModel type=\"radio\" id=\"roleUser\" name=\"role\" value=\"false\" class=\"form-check-input\">\n                        <label class=\"form-check-label\" for=\"roleUser\">\n                            Usuario\n                        </label>\n                    </div>\n                </div>\n                <br>\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\n                </div>\n            </form>\n\n        </div>\n\n    </div>\n</div>"],"mappings":";;;;;AAQA,OAAM,MAAOA,kBAAkB;EAI7BC,YAA6BC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFpC,KAAAC,WAAW,GAAkB,EAAE;IAK/B,KAAAC,QAAQ,GAAW,EAAE;EAHmC;EAQ/D,IAAWC,QAAQA,CAAA;IACjB,OAAO,IAAI,CAACH,cAAc,CAACI,kBAAkB;EAC/C;EAEAC,QAAQA,CAACC,UAAc;IAErB;EAAA;;SAlBSR,kBAAkB;;mBAAlBA,MAAkB,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAlBZ,MAAkB;EAAAa,SAAA;EAAAC,SAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;MCR/BP,EAAA,CAAAS,cAAA,aAAmC;MAIjBT,EAAA,CAAAU,MAAA,YAAK;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAGtBX,EAAA,CAAAS,cAAA,aAAuB;MAEOT,EAAA,CAAAY,UAAA,oBAAAC,mDAAA;QAAAb,EAAA,CAAAc,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAhB,EAAA,CAAAiB,WAAA;QAAA,OAAUjB,EAAA,CAAAkB,WAAA,CAAAV,GAAA,CAAAV,QAAA,CAAAkB,GAAA,CAAAG,KAAA,CAAyB;MAAA,EAAC;MAC1DnB,EAAA,CAAAS,cAAA,aAAwB;MACET,EAAA,CAAAU,MAAA,0BAAkB;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAChDX,EAAA,CAAAoB,SAAA,mBAAyI;MAC7IpB,EAAA,CAAAW,YAAA,EAAM;MACNX,EAAA,CAAAoB,SAAA,UAAI;MACJpB,EAAA,CAAAS,cAAA,cAAwB;MACbT,EAAA,CAAAU,MAAA,uBAAe;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAC9BX,EAAA,CAAAS,cAAA,eAAwB;MACpBT,EAAA,CAAAoB,SAAA,iBAA6F;MAC7FpB,EAAA,CAAAS,cAAA,iBAAgD;MAC5CT,EAAA,CAAAU,MAAA,eACJ;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAEZX,EAAA,CAAAS,cAAA,eAAwB;MACpBT,EAAA,CAAAoB,SAAA,iBAA6F;MAC7FpB,EAAA,CAAAS,cAAA,iBAA+C;MAC3CT,EAAA,CAAAU,MAAA,iBACJ;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAGhBX,EAAA,CAAAoB,SAAA,UAAI;MACJpB,EAAA,CAAAS,cAAA,eAAoB;MAC8BT,EAAA,CAAAU,MAAA,cAAM;MAAAV,EAAA,CAAAW,YAAA,EAAS;;;;MApBFX,EAAA,CAAAqB,SAAA,IAAwB;MAAxBrB,EAAA,CAAAsB,UAAA,UAAAC,GAAA,CAAAJ,KAAA,CAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}