{"ast":null,"code":"var _class;\nimport { catchError, of, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n    this.storageTasks = [];\n    this._loadToDosFromDB();\n  }\n  _loadToDosFromDB() {\n    return this.http.get(`${this.apiUrl}/todos/`).pipe(tap(todos => {\n      console.log(todos);\n    }), catchError(() => {\n      console.log('- Error al autenticar usuario...');\n      return of([]);\n    }));\n  }\n  getToDosByStatus(status) {\n    return this.http.get(`${this.apiUrl}/todos/status/${status}`).pipe(tap(todos => {\n      console.log(todos);\n    }), catchError(() => {\n      console.log('- Error al autenticar usuario...');\n      return of([]);\n    }));\n  }\n}\n_class = TasksService;\n_class.ɵfac = function TasksService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","of","tap","environment","TasksService","constructor","http","apiUrl","storageTasks","_loadToDosFromDB","get","pipe","todos","console","log","getToDosByStatus","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, of, tap } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { environment } from 'src/environments/environment.development';\nimport { Status, ToDo } from '../interfaces/todos.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n  public apiUrl:string = environment.apiUrl;\n\n  public storageTasks: ToDo[] = [];\n\n  constructor(private http:HttpClient) {\n    this._loadToDosFromDB()\n  }\n\n  private _loadToDosFromDB():Observable<any> {\n\n    return this.http.get(`${this.apiUrl}/todos/`)\n      .pipe(\n        tap((todos:any) => {\n          console.log(todos);\n        }),\n        catchError(() => {\n          console.log('- Error al autenticar usuario...');\n          return of([])\n        })\n      )\n  }\n\n  public getToDosByStatus(status:string) {\n    return this.http.get(`${this.apiUrl}/todos/status/${status}`)\n      .pipe(\n        tap((todos: any) => {\n          console.log(todos);\n        }),\n        catchError(() => {\n          console.log('- Error al autenticar usuario...');\n          return of([])\n        })\n      )\n  }\n  \n}\n"],"mappings":";AAEA,SAAqBA,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;AAItD,SAASC,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJjB,KAAAC,MAAM,GAAUJ,WAAW,CAACI,MAAM;IAElC,KAAAC,YAAY,GAAW,EAAE;IAG9B,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEQA,gBAAgBA,CAAA;IAEtB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,SAAS,CAAC,CAC1CI,IAAI,CACHT,GAAG,CAAEU,KAAS,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC,EACFZ,UAAU,CAAC,MAAK;MACda,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAOb,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACL;EAEOc,gBAAgBA,CAACC,MAAa;IACnC,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,iBAAiBS,MAAM,EAAE,CAAC,CAC1DL,IAAI,CACHT,GAAG,CAAEU,KAAU,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC,EACFZ,UAAU,CAAC,MAAK;MACda,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAOb,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACL;;SAlCWG,YAAY;;mBAAZA,MAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZhB,MAAY;EAAAiB,OAAA,EAAZjB,MAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}