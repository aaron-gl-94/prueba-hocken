{"ast":null,"code":"var _class;\nimport { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class sessionService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, role) {\n    if (!username && !role) return;\n    this.setSession({\n      username,\n      role\n    });\n  }\n  setSession(userData) {\n    localStorage.setItem('userSession', {\n      userId: uuid(),\n      ...userData\n    });\n  }\n}\n_class = sessionService;\n_class.ɵfac = function sessionService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["v4","uuid","sessionService","constructor","http","login","username","role","setSession","userData","localStorage","setItem","userId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { v4 as uuid } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class sessionService {\n\n  constructor(private readonly http:HttpClient) { }\n\n  login(username:string, role:boolean) {\n    if (!username && !role) return;\n\n    this.setSession({username, role});\n  }\n\n\n  setSession(userData:any) {\n    localStorage.setItem('userSession', {userId: uuid(), ...userData})\n  }\n\n\n}\n"],"mappings":";AAEA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,cAAc;EAEzBC,YAA6BC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEhDC,KAAKA,CAACC,QAAe,EAAEC,IAAY;IACjC,IAAI,CAACD,QAAQ,IAAI,CAACC,IAAI,EAAE;IAExB,IAAI,CAACC,UAAU,CAAC;MAACF,QAAQ;MAAEC;IAAI,CAAC,CAAC;EACnC;EAGAC,UAAUA,CAACC,QAAY;IACrBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE;MAACC,MAAM,EAAEX,IAAI,EAAE;MAAE,GAAGQ;IAAQ,CAAC,CAAC;EACpE;;SAbWP,cAAc;;mBAAdA,MAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdd,MAAc;EAAAe,OAAA,EAAdf,MAAc,CAAAgB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}