{"ast":null,"code":"var _class;\nimport { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.storageUserSession = [];\n    this._getUserFromStorage();\n  }\n  _getUserFromStorage() {\n    if (!localStorage.getItem('storageUserSession')) return;\n    this.storageUserSession = JSON.parse(localStorage.getItem('storageUserSession'));\n  }\n  _saveUserSession() {\n    localStorage.setItem('userSession', JSON.stringify(this.storageUserSession));\n  }\n  _setUserSession(userData) {\n    this.storageUserSession.push({\n      userId: uuid(),\n      ...userData\n    });\n    this._saveUserSession();\n  }\n  _removeUserSession(username) {\n    this.storageUserSession = this.storageUserSession.filter(storageUsers => storageUsers.username !== username);\n  }\n  login(username, role) {\n    this._setUserSession({\n      username,\n      role\n    });\n  }\n  logout(username) {\n    if (!username) return;\n    this._removeUserSession(username);\n  }\n}\n_class = SessionService;\n_class.ɵfac = function SessionService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["v4","uuid","SessionService","constructor","storageUserSession","_getUserFromStorage","localStorage","getItem","JSON","parse","_saveUserSession","setItem","stringify","_setUserSession","userData","push","userId","_removeUserSession","username","filter","storageUsers","login","role","logout","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\nimport { UserSession } from '../interfaces/users.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  public storageUserSession: UserSession[] = [];\n\n  constructor() {\n    this._getUserFromStorage()\n  }\n\n  private _getUserFromStorage() {\n    if (!localStorage.getItem('storageUserSession')) return;\n\n    this.storageUserSession = JSON.parse(localStorage.getItem('storageUserSession')!)\n  }\n\n  private _saveUserSession() {\n    localStorage.setItem('userSession', JSON.stringify(this.storageUserSession));\n  }\n\n  private _setUserSession(userData:UserSession) {\n    this.storageUserSession.push({ userId: uuid(), ...userData })\n    this._saveUserSession();\n  }\n\n  private _removeUserSession(username:string) {\n    this.storageUserSession = this.storageUserSession.filter(storageUsers => storageUsers.username !== username);\n  }\n  \n  public login(username:string, role:boolean) {\n    this._setUserSession({username, role});\n  }\n\n  public logout(username: string) {\n    if (!username) return;\n\n    this._removeUserSession(username);\n  }\n}\n"],"mappings":";AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAMjC,OAAM,MAAOC,cAAc;EAIzBC,YAAA;IAFO,KAAAC,kBAAkB,GAAkB,EAAE;IAG3C,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEQA,mBAAmBA,CAAA;IACzB,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,EAAE;IAEjD,IAAI,CAACH,kBAAkB,GAAGI,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAE,CAAC;EACnF;EAEQG,gBAAgBA,CAAA;IACtBJ,YAAY,CAACK,OAAO,CAAC,aAAa,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACR,kBAAkB,CAAC,CAAC;EAC9E;EAEQS,eAAeA,CAACC,QAAoB;IAC1C,IAAI,CAACV,kBAAkB,CAACW,IAAI,CAAC;MAAEC,MAAM,EAAEf,IAAI,EAAE;MAAE,GAAGa;IAAQ,CAAE,CAAC;IAC7D,IAAI,CAACJ,gBAAgB,EAAE;EACzB;EAEQO,kBAAkBA,CAACC,QAAe;IACxC,IAAI,CAACd,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACe,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACF,QAAQ,KAAKA,QAAQ,CAAC;EAC9G;EAEOG,KAAKA,CAACH,QAAe,EAAEI,IAAY;IACxC,IAAI,CAACT,eAAe,CAAC;MAACK,QAAQ;MAAEI;IAAI,CAAC,CAAC;EACxC;EAEOC,MAAMA,CAACL,QAAgB;IAC5B,IAAI,CAACA,QAAQ,EAAE;IAEf,IAAI,CAACD,kBAAkB,CAACC,QAAQ,CAAC;EACnC;;SAnCWhB,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAsB,OAAA,EAAdtB,MAAc,CAAAuB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}