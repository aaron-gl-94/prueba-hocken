{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/session.service\";\nimport * as i3 from \"@angular/common\";\nfunction LoginPageComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 18)(2, \"span\");\n    i0.ɵɵtext(3, \" Faltan 1 o m\\u00E1s campos\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class LoginPageComponent {\n  constructor(fb, sessionService) {\n    this.fb = fb;\n    this.sessionService = sessionService;\n    this.userSession = [];\n    this.isSubmitted = false;\n    this.isValid = false;\n  }\n  get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n  onSubmit(formLogin) {\n    this.isSubmitted = true;\n    if (formLogin.username !== '') {\n      this.isValid = true;\n    }\n    console.log({\n      formLogin\n    }, this.isValid);\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SessionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"login-page\"]],\n  decls: 31,\n  vars: 3,\n  consts: [[1, \"col-md-4\", \"mx-auto\", \"pt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Nombre de Usuario\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"username\", \"\"], [1, \"text-center\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"id\", \"roleAdmin\", \"name\", \"role\", \"value\", \"true\", \"formControlName\", \"role\", 1, \"form-check-input\"], [\"for\", \"roleAdmin\", 1, \"form-check-label\"], [\"type\", \"radio\", \"id\", \"roleUser\", \"name\", \"role\", \"value\", \"false\", \"formControlName\", \"role\", \"checked\", \"\", 1, \"form-check-input\"], [\"for\", \"roleUser\", 1, \"form-check-label\"], [4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function LoginPageComponent_Template_form_submit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Nombre de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"hr\");\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n      i0.ɵɵtext(15, \"Rol de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"div\", 9)(18, \"div\", 10);\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementStart(20, \"label\", 12);\n      i0.ɵɵtext(21, \" Administrador \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 10);\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementStart(24, \"label\", 14);\n      i0.ɵɵtext(25, \" Usuario \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵtemplate(27, LoginPageComponent_div_27_Template, 4, 0, \"div\", 15);\n      i0.ɵɵelementStart(28, \"div\", 16)(29, \"button\", 17);\n      i0.ɵɵtext(30, \"Entrar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(11);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", _r0.value);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && !ctx.isValid);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginPageComponent","constructor","fb","sessionService","userSession","isSubmitted","isValid","isLoggin","storageUserSession","onSubmit","formLogin","username","console","log","ɵɵdirectiveInject","i1","FormBuilder","i2","SessionService","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵlistener","LoginPageComponent_Template_form_submit_6_listener","ɵɵelement","ɵɵtemplate","LoginPageComponent_div_27_Template","ɵɵadvance","ɵɵproperty","loginForm","_r0","value"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.html"],"sourcesContent":["import { Component} from '@angular/core';\n\nimport { SessionService } from '../../services/session.service';\nimport { UserLogin, UserSession } from 'src/app/interfaces/users.interface';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html'\n})\nexport class LoginPageComponent {\n\n  public userSession: UserSession[] = [];\n  public isSubmitted:boolean = false;\n  public isValid: boolean = false;\n\n  constructor(public fb:FormBuilder, private readonly sessionService: SessionService) { }\n\n  public get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n\n  onSubmit(formLogin: UserLogin){\n    this.isSubmitted = true;\n\n    if (formLogin.username !== '') {\n      this.isValid = true;\n    }\n\n    console.log({formLogin}, this.isValid);\n    \n  }\n}\n","<div class=\"col-md-4 mx-auto pt-5\">\n    <div class=\"card\">\n        \n        <div class=\"card-header\">\n            <span>Login</span>\n        </div>\n\n        <div class=\"card-body\">\n\n            <form [formGroup]=\"loginForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nombre de usuario:</label>\n                    <input type=\"text\" name=\"username\" id=\"username\" #username [value]=\"username.value\" class=\"form-control\" placeholder=\"Nombre de Usuario\" required>\n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Rol de usuario:</label>\n                    <br>\n                    <div class=\"text-center\">\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" id=\"roleAdmin\" name=\"role\" value=\"true\" class=\"form-check-input\" formControlName=\"role\">\n                            <label class=\"form-check-label\" for=\"roleAdmin\">\n                                Administrador\n                            </label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" id=\"roleUser\" name=\"role\" value=\"false\" class=\"form-check-input\" formControlName=\"role\" checked>\n                            <label class=\"form-check-label\" for=\"roleUser\">\n                                Usuario\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <br>\n                <div *ngIf=\"isSubmitted && !isValid\">\n                    <div class=\"alert alert-danger\">\n                        <span> Faltan 1 o más campos</span>\n                    </div>\n                </div>\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\n                </div>\n            </form>\n\n        </div>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}