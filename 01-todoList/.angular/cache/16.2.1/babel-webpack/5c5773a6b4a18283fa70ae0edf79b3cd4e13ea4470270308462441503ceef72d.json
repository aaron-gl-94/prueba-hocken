{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/session.service\";\nimport * as i3 from \"@angular/common\";\nfunction LoginPageComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19);\n    i0.ɵɵelement(2, \"span\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.messageError, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class LoginPageComponent {\n  constructor(fb, sessionService) {\n    this.fb = fb;\n    this.sessionService = sessionService;\n    this.loginForm = new FormGroup({});\n    this.isSubmitted = false;\n    this.isValid = false;\n    this.messageError = '';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(8)]),\n      role: new FormControl('', [Validators.requiredTrue])\n    });\n  }\n  onLogin() {\n    const dataForm = this.loginForm.value;\n    let errorCount = 0;\n    this.isSubmitted = true;\n    this.messageError = '';\n    if (dataForm.email === '') {\n      this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>';\n      errorCount++;\n    }\n    if (dataForm.password === '') {\n      this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n      errorCount++;\n    }\n    if (dataForm.role === '') {\n      this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n      errorCount++;\n    }\n    if (dataForm.invalid || errorCount > 0) return;\n    console.log('- login Data');\n    this.sessionService.login(dataForm);\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SessionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"login-page\"]],\n  decls: 33,\n  vars: 2,\n  consts: [[1, \"col-md-4\", \"mx-auto\", \"pt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"submit\"], [1, \"form-group-sm\", \"pt-1\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"correo@ejemplo.com\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [1, \"text-center\"], [1, \"form-check\", \"form-check-inline\"], [\"formControlName\", \"role\", \"type\", \"radio\", \"id\", \"roleAdmin\", \"name\", \"role\", \"value\", \"admin\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"roleAdmin\", 1, \"form-check-label\"], [\"formControlName\", \"role\", \"type\", \"radio\", \"id\", \"roleUser\", \"name\", \"role\", \"value\", \"user\", \"required\", \"\", 1, \"form-check-input\", 3, \"checked\"], [\"for\", \"roleUser\", 1, \"form-check-label\"], [4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [3, \"innerHTML\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function LoginPageComponent_Template_form_submit_6_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Correo Electr\\u00F3nico:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\");\n      i0.ɵɵtext(17, \"Rol de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 11);\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵelementStart(22, \"label\", 13);\n      i0.ɵɵtext(23, \" Administrador \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 11);\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementStart(26, \"label\", 15);\n      i0.ɵɵtext(27, \" Usuario \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(28, \"hr\");\n      i0.ɵɵtemplate(29, LoginPageComponent_div_29_Template, 3, 1, \"div\", 16);\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"button\", 18);\n      i0.ɵɵtext(32, \"Entrar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","messageError","ɵɵsanitizeHtml","LoginPageComponent","constructor","fb","sessionService","loginForm","isSubmitted","isValid","ngOnInit","email","required","password","minLength","maxLength","role","requiredTrue","onLogin","dataForm","value","errorCount","invalid","console","log","login","ɵɵdirectiveInject","i1","FormBuilder","i2","SessionService","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","LoginPageComponent_Template_form_submit_6_listener","ɵɵtemplate","LoginPageComponent_div_29_Template"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.html"],"sourcesContent":["import { Component} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SessionService } from '../../services/session.service';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html'\n})\nexport class LoginPageComponent {\n  constructor(\n    public fb:FormBuilder,\n    private readonly sessionService: SessionService\n  ) {}\n\n  public loginForm: FormGroup = new FormGroup({});\n\n  public isSubmitted:boolean = false;\n  public isValid: boolean = false;\n  public messageError:string = '';\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup(\n      {\n        email: new FormControl('', [\n          Validators.required,\n          Validators.email\n        ]),\n        password: new FormControl('', [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(8)\n        ]),\n        role: new FormControl('', [Validators.requiredTrue])\n      }\n    );\n  }\n\n  onLogin():void{\n    const dataForm    = this.loginForm.value;\n    let   errorCount  = 0;\n    this.isSubmitted  = true;\n    this.messageError = '';\n\n    if (dataForm.email === '') {\n      this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>' ;\n      errorCount++;\n    }\n    if (dataForm.password === '') {\n      this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n      errorCount++;\n    }\n    if (dataForm.role === '') {\n      this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n      errorCount++;\n    }\n\n    if (dataForm.invalid || errorCount > 0) return;\n\n    console.log('- login Data', );\n    \n    this.sessionService.login(dataForm);\n  }\n}\n","<div class=\"col-md-4 mx-auto pt-5\">\n    <div class=\"card\">\n        \n        <div class=\"card-header\">\n            <h3>Login</h3>\n        </div>\n\n        <div class=\"card-body\">\n\n            <form [formGroup]=\"loginForm\" (submit)=\"onLogin()\">\n                <div class=\"form-group-sm pt-1\">\n                    <label for=\"email\">Correo Electrónico:</label>\n                    <input formControlName=\"email\" type=\"text\" name=\"email\" id=\"email\" class=\"form-control form-control-sm\" placeholder=\"correo@ejemplo.com\" required>\n                </div>\n\n                <div class=\"form-group-sm pt-1\">\n                    <label for=\"password\">Password:</label>\n                    <input formControlName=\"password\" type=\"password\" name=\"password\" id=\"password\" class=\"form-control form-control-sm\"\n                        placeholder=\"Contraseña\" required>\n                </div>\n                \n                <div class=\"form-group-sm pt-1\">\n                    <label>Rol de usuario:</label>\n                    <br>\n                    <div class=\"text-center\">\n                        <div class=\"form-check form-check-inline\">\n                            <input formControlName=\"role\" type=\"radio\" id=\"roleAdmin\" name=\"role\" value=\"admin\" class=\"form-check-input\" required>\n                            <label class=\"form-check-label\" for=\"roleAdmin\">\n                                Administrador\n                            </label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input formControlName=\"role\" type=\"radio\" id=\"roleUser\" name=\"role\" value=\"user\" class=\"form-check-input\" required [checked]>\n                            <label class=\"form-check-label\" for=\"roleUser\">\n                                Usuario\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n                <div *ngIf=\"isSubmitted && loginForm.invalid\">\n                    <div class=\"alert alert-danger\">\n                        <span [innerHTML]=\"messageError\"></span>\n                    </div>\n                </div>\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\n                </div>\n            </form>\n\n        </div>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}