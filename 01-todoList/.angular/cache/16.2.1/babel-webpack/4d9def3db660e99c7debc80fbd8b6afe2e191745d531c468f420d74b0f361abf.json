{"ast":null,"code":"var _class;\nimport { v4 as uuid } from 'uuid';\nimport { environment } from 'src/environments/environment.development';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = environment.apiUrl;\n    this.currentUser = {\n      id: '',\n      email: '',\n      username: '',\n      role: 'user'\n    };\n  }\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    return authToken !== null;\n  }\n  login(user) {\n    return this.http.get(`${this.apiUrl}/users/?email=${user.email}&password=${user.password}`).pipe(tap(response => {\n      if (response === undefined) return false;\n      const {\n        email,\n        id,\n        role,\n        username\n      } = response[0];\n      if (email) {\n        localStorage.setItem('auth_token', uuid());\n        this.currentUser = {\n          id,\n          email,\n          username,\n          role\n        };\n      }\n    }));\n  }\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['login']);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["v4","uuid","environment","tap","AuthService","constructor","http","router","apiUrl","currentUser","id","email","username","role","getToken","localStorage","getItem","isLoggedIn","authToken","console","log","login","user","get","password","pipe","response","undefined","setItem","logout","removeItem","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { environment } from 'src/environments/environment.development';\nimport { User } from '../interfaces/users.interface';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public apiUrl:string = environment.apiUrl;\n  public currentUser:User = {\n    id: '',\n    email: '',\n    username: '',\n    role: 'user'\n  };\n\n  constructor(private http:HttpClient, private router:Router ) {}\n\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    \n    return authToken !== null;\n  }\n\n  login(user: User) {\n    return this.http.get(`${this.apiUrl}/users/?email=${user.email}&password=${user.password}`)\n      .pipe(\n        tap((response: any) => {\n\n          if (response === undefined) return false;\n          \n          const { email, id, role, username } = response[0];\n\n          if (email) {\n            localStorage.setItem('auth_token', uuid());\n\n            this.currentUser = {id, email, username, role}\n          }\n        })\n      );\n  }\n\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['login']);\n  }\n}"],"mappings":";AAIA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,SAASC,WAAW,QAAQ,0CAA0C;AAEtE,SAAqBC,GAAG,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,WAAW;EAStBC,YAAoBC,IAAe,EAAUC,MAAa;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAR5C,KAAAC,MAAM,GAAUN,WAAW,CAACM,MAAM;IAClC,KAAAC,WAAW,GAAQ;MACxBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;KACP;EAE6D;EAE9D,IAAIC,QAAQA,CAAA;IACV,OAAOC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC3C;EAEA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAClDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;IAExC,OAAOA,SAAS,KAAK,IAAI;EAC3B;EAEAG,KAAKA,CAACC,IAAU;IACd,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,GAAG,IAAI,CAACf,MAAM,iBAAiBc,IAAI,CAACX,KAAK,aAAaW,IAAI,CAACE,QAAQ,EAAE,CAAC,CACxFC,IAAI,CACHtB,GAAG,CAAEuB,QAAa,IAAI;MAEpB,IAAIA,QAAQ,KAAKC,SAAS,EAAE,OAAO,KAAK;MAExC,MAAM;QAAEhB,KAAK;QAAED,EAAE;QAAEG,IAAI;QAAED;MAAQ,CAAE,GAAGc,QAAQ,CAAC,CAAC,CAAC;MAEjD,IAAIf,KAAK,EAAE;QACTI,YAAY,CAACa,OAAO,CAAC,YAAY,EAAE3B,IAAI,EAAE,CAAC;QAE1C,IAAI,CAACQ,WAAW,GAAG;UAACC,EAAE;UAAEC,KAAK;UAAEC,QAAQ;UAAEC;QAAI,CAAC;;IAElD,CAAC,CAAC,CACH;EACL;EAEAgB,MAAMA,CAAA;IACJ,IAAId,YAAY,CAACe,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACpF;;SA1CW3B,WAAW;;mBAAXA,MAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAXjC,MAAW;EAAAkC,OAAA,EAAXlC,MAAW,CAAAmC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}