{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment.development';\nimport { v4 as uuid } from 'uuid';\nimport { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = environment.apiUrl;\n  }\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    return authToken !== null;\n  }\n  login(userDataForm) {\n    let username = userDataForm.email.split('@');\n    return this.http.post(`${this.apiUrl}/users/`, {\n      token: uuid(),\n      username: username[0],\n      ...userDataForm\n    }).pipe(tap(users => {\n      console.log('- User Post Login', users);\n      const {\n        authToken\n      } = users;\n      localStorage.setItem('auth_token', authToken.id);\n    }), catchError(() => {\n      console.log('- Error al autenticar usuario...');\n      return of([]);\n    }));\n  }\n  getUserProfile(id) {\n    return this.http.get(`${this.apiUrl}/users/${id}`).pipe(tap());\n  }\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['log-in']);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","v4","uuid","catchError","of","tap","AuthService","constructor","http","router","apiUrl","getToken","localStorage","getItem","isLoggedIn","authToken","console","log","login","userDataForm","username","email","split","post","token","pipe","users","setItem","id","getUserProfile","get","logout","removeItem","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { environment } from 'src/environments/environment.development';\nimport { v4 as uuid } from 'uuid';\nimport { User } from '../interfaces/users.interface';\nimport { Observable, catchError, of, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public apiUrl = environment.apiUrl;\n\n  constructor(\n    private http:HttpClient,\n    private router:Router\n  ) {}\n\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    \n    return authToken !== null;\n  }\n\n  login(userDataForm: User):Observable<any> {\n\n    let username = userDataForm.email.split('@');\n    \n    return this.http.post(`${this.apiUrl}/users/`, { token: uuid(), username: username[0]  ...userDataForm })\n      .pipe(\n        tap((users:any) => {\n          console.log('- User Post Login', users);\n\n          const { authToken } = users;\n\n          localStorage.setItem('auth_token', authToken.id);\n        }),\n        catchError(() => {\n          console.log('- Error al autenticar usuario...');\n          return of([])\n        })\n      )\n  }\n\n  getUserProfile(id:string):Observable<any> {\n    return this.http.get(`${this.apiUrl}/users/${id}`)\n      .pipe(\n        tap(\n\n        )\n      )\n\n  }\n\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['log-in']);\n  }\n}"],"mappings":";AAIA,SAASA,WAAW,QAAQ,0CAA0C;AACtE,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,SAAqBC,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;;AAKtD,OAAM,MAAOC,WAAW;EAGtBC,YACUC,IAAe,EACfC,MAAa;IADb,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAJT,KAAAC,MAAM,GAAGV,WAAW,CAACU,MAAM;EAK/B;EAEH,IAAIC,QAAQA,CAAA;IACV,OAAOC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC3C;EAEA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAClDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;IAExC,OAAOA,SAAS,KAAK,IAAI;EAC3B;EAEAG,KAAKA,CAACC,YAAkB;IAEtB,IAAIC,QAAQ,GAAGD,YAAY,CAACE,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE5C,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,GAAG,IAAI,CAACb,MAAM,SAAS,EAAE;MAAEc,KAAK,EAAEtB,IAAI,EAAE;MAAEkB,QAAQ,EAAEA,QAAQ,CAAC,CAAC,CAAC;MAAE,GAAGD;IAAY,CAAE,CAAC,CACtGM,IAAI,CACHpB,GAAG,CAAEqB,KAAS,IAAI;MAChBV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,KAAK,CAAC;MAEvC,MAAM;QAAEX;MAAS,CAAE,GAAGW,KAAK;MAE3Bd,YAAY,CAACe,OAAO,CAAC,YAAY,EAAEZ,SAAS,CAACa,EAAE,CAAC;IAClD,CAAC,CAAC,EACFzB,UAAU,CAAC,MAAK;MACda,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAOb,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACL;EAEAyB,cAAcA,CAACD,EAAS;IACtB,OAAO,IAAI,CAACpB,IAAI,CAACsB,GAAG,CAAC,GAAG,IAAI,CAACpB,MAAM,UAAUkB,EAAE,EAAE,CAAC,CAC/CH,IAAI,CACHpB,GAAG,EAEF,CACF;EAEL;EAEA0B,MAAMA,CAAA;IACJ,IAAInB,YAAY,CAACoB,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EACrF;;SAnDW3B,WAAW;;mBAAXA,MAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAXjC,MAAW;EAAAkC,OAAA,EAAXlC,MAAW,CAAAmC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}