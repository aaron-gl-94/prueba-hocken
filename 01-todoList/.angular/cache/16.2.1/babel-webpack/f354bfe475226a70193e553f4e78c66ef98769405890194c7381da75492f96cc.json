{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TasksListsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" No hay tareas para mostrar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksListsComponent_ng_template_9_li_1_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"input\", 24);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_9_li_1_ng_template_9_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const todo_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.updateStatusTodo(todo_r8.idTodo, \"new\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 20)(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    const todo_r8 = ctx_r15.$implicit;\n    const i_r9 = ctx_r15.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", todo_r8.idTodo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", todo_r8.idTodo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r9 + 1, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r8.nameTodo, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"list-group-item-success\": a0\n  };\n};\nfunction TasksListsComponent_ng_template_9_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16)(1, \"div\", 4)(2, \"div\", 17)(3, \"div\", 18)(4, \"input\", 19);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_9_li_1_Template_input_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const todo_r8 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.updateStatusTodo(todo_r8.idTodo, \"end\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 20)(6, \"b\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, TasksListsComponent_ng_template_9_li_1_ng_template_9_Template, 6, 4, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 22)(12, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_9_li_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const todo_r8 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.removeToDo(todo_r8.idTodo));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const todo_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, todo_r8.status === \"end\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"id\", todo_r8.idTodo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", todo_r8.idTodo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r9 + 1, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r8.nameTodo, \" \");\n  }\n}\nfunction TasksListsComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, TasksListsComponent_ng_template_9_li_1_Template, 13, 7, \"li\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.newTodos);\n  }\n}\nfunction TasksListsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" No hay tareas para mostrar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksListsComponent_ng_template_15_li_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 18)(2, \"input\", 19);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_15_li_1_div_3_Template_input_click_2_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const todo_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.updateStatusTodo(todo_r20.idTodo, \"end\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 20)(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext();\n    const todo_r20 = ctx_r28.$implicit;\n    const i_r21 = ctx_r28.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", todo_r20.idTodo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", todo_r20.idTodo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r21 + 1, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r20.nameTodo, \" \");\n  }\n}\nfunction TasksListsComponent_ng_template_15_li_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"input\", 24);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_15_li_1_ng_template_4_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const todo_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.updateStatusTodo(todo_r20.idTodo, \"new\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 20)(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext();\n    const todo_r20 = ctx_r32.$implicit;\n    const i_r21 = ctx_r32.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", todo_r20.idTodo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", todo_r20.idTodo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r21 + 1, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r20.nameTodo, \" \");\n  }\n}\nfunction TasksListsComponent_ng_template_15_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16)(1, \"div\", 4)(2, \"div\", 17);\n    i0.ɵɵtemplate(3, TasksListsComponent_ng_template_15_li_1_div_3_Template, 7, 4, \"div\", 25);\n    i0.ɵɵtemplate(4, TasksListsComponent_ng_template_15_li_1_ng_template_4_Template, 6, 4, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 22)(7, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function TasksListsComponent_ng_template_15_li_1_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const todo_r20 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.removeToDo(todo_r20.idTodo));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const todo_r20 = ctx.$implicit;\n    const _r23 = i0.ɵɵreference(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, todo_r20.status === \"end\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", todo_r20.status === \"new\")(\"ngIfElse\", _r23);\n  }\n}\nfunction TasksListsComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, TasksListsComponent_ng_template_15_li_1_Template, 8, 5, \"li\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.endTodos);\n  }\n}\nfunction TasksListsComponent_li_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26)(1, \"div\", 27)(2, \"label\", 28)(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r35 = ctx.$implicit;\n    const i_r36 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i_r36 + 1, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r35.nameTodo, \" \");\n  }\n}\nexport class TasksListsComponent {\n  constructor() {\n    this.username = 'Aarón';\n    this.newTodos = [];\n    this.endTodos = [];\n    this.deletedTodos = [];\n    this.onDeleteTodo = new EventEmitter();\n    this.onDeleteAll = new EventEmitter();\n    this.onUpdateToDo = new EventEmitter();\n    this.onReset = new EventEmitter();\n  }\n  removeToDo(id) {\n    if (!id) return;\n    this.onDeleteTodo.emit(id);\n  }\n  removeToDoAll() {\n    this.onDeleteAll.emit();\n  }\n  updateStatusTodo(idTodo, status) {\n    console.log(idTodo, status);\n    if (!idTodo || !status) return;\n    this.onUpdateToDo.emit({\n      idTodo,\n      status\n    });\n  }\n  resetToDos() {\n    this.onReset.emit();\n  }\n}\n_class = TasksListsComponent;\n_class.ɵfac = function TasksListsComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"task-lists\"]],\n  inputs: {\n    newTodos: \"newTodos\",\n    endTodos: \"endTodos\",\n    deletedTodos: \"deletedTodos\"\n  },\n  outputs: {\n    onDeleteTodo: \"onDeleteTodo\",\n    onDeleteAll: \"onDeleteAll\",\n    onUpdateToDo: \"onUpdateToDo\",\n    onReset: \"onReset\"\n  },\n  decls: 33,\n  vars: 8,\n  consts: [[1, \"row\", \"pt-2\"], [1, \"col-md\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\"], [1, \"card-title\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\", \"ngIfElse\"], [\"newsTodoList\", \"\"], [\"endsTodoList\", \"\"], [1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item list-group-item-danger disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-warning\"], [\"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"ngClass\"], [1, \"col-md-11\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"click\"], [1, \"form-check-label\", 3, \"for\"], [\"toDoChecked\", \"\"], [1, \"col-md\", \"mx-auto\", \"justify-content-end\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [\"type\", \"checkbox\", \"checked\", \"\", 1, \"form-check-input\", 3, \"id\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"list-group-item\", \"list-group-item-danger\", \"disabled\"], [1, \"form-check\", \"w-75\"], [\"for\", \"flexCheckDefault1\", 1, \"form-check-label\"]],\n  template: function TasksListsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 1)(6, \"h5\", 5);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, TasksListsComponent_div_8_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(9, TasksListsComponent_ng_template_9_Template, 2, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"h5\", 5);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, TasksListsComponent_div_14_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(15, TasksListsComponent_ng_template_15_Template, 2, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 0)(18, \"div\", 1)(19, \"div\", 9)(20, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function TasksListsComponent_Template_button_click_20_listener() {\n        return ctx.removeToDoAll();\n      });\n      i0.ɵɵtext(21, \"Borrar Tareas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function TasksListsComponent_Template_button_click_22_listener() {\n        return ctx.resetToDos();\n      });\n      i0.ɵɵtext(23, \"Reset App\");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 1)(26, \"div\", 2)(27, \"div\", 3)(28, \"h5\", 5);\n      i0.ɵɵtext(29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"hr\");\n      i0.ɵɵelementStart(31, \"ul\", 12);\n      i0.ɵɵtemplate(32, TasksListsComponent_li_32_Template, 6, 2, \"li\", 13);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(10);\n      const _r4 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"Tareas nuevas: \", ctx.newTodos.length, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newTodos.length === 0)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Tareas terminadas: \", ctx.endTodos.length, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.endTodos.length === 0)(\"ngIfElse\", _r4);\n      i0.ɵɵadvance(15);\n      i0.ɵɵtextInterpolate1(\"Tareas eliminadas: \", ctx.deletedTodos.length, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.deletedTodos);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TasksListsComponent_ng_template_9_li_1_ng_template_9_Template_input_click_1_listener","ɵɵrestoreView","_r14","todo_r8","ɵɵnextContext","$implicit","ctx_r12","ɵɵresetView","updateStatusTodo","idTodo","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵtextInterpolate1","i_r9","nameTodo","TasksListsComponent_ng_template_9_li_1_Template_input_click_4_listener","restoredCtx","_r17","ctx_r16","ɵɵtemplate","TasksListsComponent_ng_template_9_li_1_ng_template_9_Template","ɵɵtemplateRefExtractor","TasksListsComponent_ng_template_9_li_1_Template_button_click_12_listener","ctx_r18","removeToDo","ɵɵproperty","ɵɵpureFunction1","_c0","status","TasksListsComponent_ng_template_9_li_1_Template","ctx_r2","newTodos","TasksListsComponent_ng_template_15_li_1_div_3_Template_input_click_2_listener","_r27","todo_r20","ctx_r25","i_r21","TasksListsComponent_ng_template_15_li_1_ng_template_4_Template_input_click_1_listener","_r31","ctx_r29","TasksListsComponent_ng_template_15_li_1_div_3_Template","TasksListsComponent_ng_template_15_li_1_ng_template_4_Template","TasksListsComponent_ng_template_15_li_1_Template_button_click_7_listener","_r34","ctx_r33","_r23","TasksListsComponent_ng_template_15_li_1_Template","ctx_r5","endTodos","i_r36","todo_r35","TasksListsComponent","constructor","username","deletedTodos","onDeleteTodo","onDeleteAll","onUpdateToDo","onReset","id","emit","removeToDoAll","console","log","resetToDos","selectors","inputs","outputs","decls","vars","consts","template","TasksListsComponent_Template","rf","ctx","TasksListsComponent_div_8_Template","TasksListsComponent_ng_template_9_Template","TasksListsComponent_div_14_Template","TasksListsComponent_ng_template_15_Template","TasksListsComponent_Template_button_click_20_listener","TasksListsComponent_Template_button_click_22_listener","ɵɵelement","TasksListsComponent_li_32_Template","length","_r1","_r4"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/tasks/components/list-tasks/list-tasks.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/tasks/components/list-tasks/list-tasks.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Status, ToDo } from '../../../interfaces/todos.interface';\nimport { TasksService } from '../../../services/tasks.service';\n\n@Component({\n  selector: 'task-lists',\n  templateUrl: './list-tasks.component.html'\n})\nexport class TasksListsComponent {\n\n  public username:string = 'Aarón';\n\n  constructor () {}\n\n  @Input()\n  public newTodos: ToDo[] = [];\n\n  @Input()\n  public endTodos: ToDo[] = [];\n\n  @Input()\n  public deletedTodos: ToDo[] = [];\n\n  @Output()\n  public onDeleteTodo: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  public onDeleteAll: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  public onUpdateToDo: EventEmitter<{idTodo: string, status: string}> = new EventEmitter();\n\n  @Output()\n  public onReset: EventEmitter<null> = new EventEmitter();\n\n\n  removeToDo(id?: string): void {\n    if (!id) return;\n    this.onDeleteTodo.emit(id);\n  }\n\n  removeToDoAll(): void {\n    this.onDeleteAll.emit();\n  }\n\n  updateStatusTodo(idTodo: string, status: string): void {\n    console.log(idTodo, status);\n    \n    if (!idTodo || !status) return;\n    this.onUpdateToDo.emit({idTodo, status});\n  }\n\n  resetToDos() {\n    this.onReset.emit();\n  }\n}\n","<div class=\"row pt-2\">\n    <div class=\"col-md\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md\">\n                        <h5 class=\"card-title\">Tareas nuevas: {{newTodos.length}}</h5>\n\n                        <div *ngIf=\"newTodos.length === 0; else newsTodoList\" class=\"alert alert-warning\">\n                            No hay tareas para mostrar\n                        </div>\n                        \n                        <ng-template #newsTodoList>\n                            <ul class=\"list-group\">\n                                <li *ngFor=\"let todo of newTodos; let i = index\" class=\"list-group-item\"\n                                    [ngClass]=\"{'list-group-item-success': todo.status === 'end'}\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-11\">\n                                                <div class=\"form-check\">\n                                                    <input id=\"{{todo.idTodo}}\" (click)=\"updateStatusTodo(todo.idTodo!, 'end')\" type=\"checkbox\"\n                                                        class=\"form-check-input\">\n                                                    <label for=\"{{todo.idTodo}}\" class=\"form-check-label\">\n                                                        <b>{{ i + 1 }}.</b> {{todo.nameTodo}}\n                                                    </label>\n                                                </div>\n                                            <ng-template #toDoChecked>\n                                                <div class=\"form-check\">\n                                                    <input id=\"{{todo.idTodo}}\" (click)=\"updateStatusTodo(todo.idTodo!, 'new')\" type=\"checkbox\"\n                                                        class=\"form-check-input\" checked>\n                                                    <label for=\"{{todo.idTodo}}\" class=\"form-check-label\">\n                                                        <b>{{ i + 1 }}.</b> {{todo.nameTodo}}\n                                                    </label>\n                                                </div>\n                                            </ng-template>\n                                        </div>\n                                        <div class=\"col-md mx-auto justify-content-end\">\n                                            <button (click)=\"removeToDo(todo.idTodo)\" type=\"button\" class=\"btn-close\"></button>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </ng-template>\n                    </div>\n\n                    <div class=\"col-md\">\n                        <h5 class=\"card-title\">Tareas terminadas: {{endTodos.length}}</h5>\n                        <div *ngIf=\"endTodos.length === 0; else endsTodoList\" class=\"alert alert-warning\">\n                            No hay tareas para mostrar\n                        </div>\n                    \n                        <ng-template #endsTodoList>\n                            <ul class=\"list-group\">\n                                <li *ngFor=\"let todo of endTodos; let i = index\" class=\"list-group-item\"\n                                    [ngClass]=\"{'list-group-item-success': todo.status === 'end'}\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-11\">\n                                            <div *ngIf=\"todo.status === 'new'; else toDoChecked\">\n                                                <div class=\"form-check\">\n                                                    <input id=\"{{todo.idTodo}}\" (click)=\"updateStatusTodo(todo.idTodo!, 'end')\"\n                                                        type=\"checkbox\" class=\"form-check-input\">\n                                                    <label for=\"{{todo.idTodo}}\" class=\"form-check-label\">\n                                                        <b>{{ i + 1 }}.</b> {{todo.nameTodo}}\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <ng-template #toDoChecked>\n                                                <div class=\"form-check\">\n                                                    <input id=\"{{todo.idTodo}}\" (click)=\"updateStatusTodo(todo.idTodo!, 'new')\"\n                                                        type=\"checkbox\" class=\"form-check-input\" checked>\n                                                    <label for=\"{{todo.idTodo}}\" class=\"form-check-label\">\n                                                        <b>{{ i + 1 }}.</b> {{todo.nameTodo}}\n                                                    </label>\n                                                </div>\n                                            </ng-template>\n                                        </div>\n                                        <div class=\"col-md mx-auto justify-content-end\">\n                                            <button (click)=\"removeToDo(todo.idTodo)\" type=\"button\" class=\"btn-close\"></button>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </ng-template>\n                    </div>\n                </div>\n\n                <div class=\"row pt-2\">\n                    <div class=\"col-md\">\n                        <div class=\"btn-group\">\n                            <button type=\"button\" (click)=\"removeToDoAll()\" class=\"btn btn-warning\">Borrar Tareas</button>\n                            <button type=\"button\" (click)=\"resetToDos()\" class=\"btn btn-danger\">Reset App</button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row pt-2\">\n    <div class=\"col-md\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Tareas eliminadas: {{deletedTodos.length}}</h5>\n                <hr>\n                <ul class=\"list-group\">\n                    <li *ngFor=\"let todo of deletedTodos; let i = index\" class=\"list-group-item list-group-item-danger disabled\">\n                        <div class=\"form-check w-75\">\n                            <label class=\"form-check-label\" for=\"flexCheckDefault1\">\n                                <b>{{ i + 1 }}.</b> {{todo.nameTodo}}\n                            </label>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}