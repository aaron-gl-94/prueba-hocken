{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/session.service\";\nconst _c0 = [\"role\"];\nexport class LoginPageComponent {\n  constructor(sessionService) {\n    this.sessionService = sessionService;\n    this.userSession = [];\n    this.username = '';\n  }\n  get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n  login(username, role) {\n    console.log(username, role);\n    //this.sessionService.login(this.username, this.role);\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.SessionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"login-page\"]],\n  viewQuery: function LoginPageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tagInput = _t.first);\n    }\n  },\n  inputs: {\n    username: \"username\"\n  },\n  decls: 29,\n  vars: 3,\n  consts: [[1, \"col-md-4\", \"mx-auto\", \"pt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Nombre de Usuario\", 1, \"form-control\", 3, \"value\"], [\"username\", \"\"], [1, \"form-check\"], [\"type\", \"radio\", \"id\", \"roleAdmin\", \"name\", \"role\", 1, \"form-check-input\", 3, \"value\"], [\"role\", \"\"], [\"for\", \"roleAdmin\", 1, \"form-check-label\"], [\"type\", \"radio\", \"id\", \"roleUser\", \"name\", \"role\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"roleUser\", 1, \"form-check-label\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Nombre de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\");\n      i0.ɵɵtext(14, \"Rol de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8);\n      i0.ɵɵelement(16, \"input\", 9, 10);\n      i0.ɵɵelementStart(18, \"label\", 11);\n      i0.ɵɵtext(19, \" Admin \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 8);\n      i0.ɵɵelement(21, \"input\", 12, 10);\n      i0.ɵɵelementStart(23, \"label\", 13);\n      i0.ɵɵtext(24, \" Usuario \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"div\", 14)(27, \"button\", 15);\n      i0.ɵɵtext(28, \"Entrar\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", _r0.value);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", false);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["LoginPageComponent","constructor","sessionService","userSession","username","isLoggin","storageUserSession","login","role","console","log","i0","ɵɵdirectiveInject","i1","SessionService","selectors","viewQuery","LoginPageComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","_r0","value"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/login-page/login-page.component.html"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { SessionService } from '../../services/session.service';\nimport { UserSession } from 'src/app/interfaces/users.interface';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html'\n})\nexport class LoginPageComponent {\n\n  public userSession: UserSession[] = [];\n\n  constructor(private readonly sessionService: SessionService) { }\n\n  @Input()\n  public username: string = '';\n\n  @ViewChild('role')\n  tagInput!: ElementRef<HTMLInputElement>;\n\n\n  public get isLoggin() {\n    return this.sessionService.storageUserSession;\n  }\n\n  login(username:string, role: boolean){\n    console.log(username, role);\n    \n    //this.sessionService.login(this.username, this.role);\n  }\n\n\n\n\n}\n","<div class=\"col-md-4 mx-auto pt-5\">\n    <div class=\"card\">\n        \n        <div class=\"card-header\">\n            <span>Login</span>\n        </div>\n\n        <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nombre de usuario:</label>\n                    <input [value]=\"username.value\" #username type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Nombre de Usuario\">\n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Rol de usuario:</label>\n                    <div class=\"form-check\">\n                        <input type=\"radio\" id=\"roleAdmin\" class=\"form-check-input\" #role name=\"role\" [value]=\"true\">\n                        <label class=\"form-check-label\" for=\"roleAdmin\">\n                            Admin\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input type=\"radio\" id=\"roleUser\" class=\"form-check-input\" #role name=\"role\" [value]=\"false\">\n                        <label class=\"form-check-label\" for=\"roleUser\">\n                            Usuario\n                        </label>\n                    </div>\n                </div>\n                <br>\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\n                </div>\n        </div>\n\n    </div>\n</div>"],"mappings":";;;;AAQA,OAAM,MAAOA,kBAAkB;EAI7BC,YAA6BC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFpC,KAAAC,WAAW,GAAkB,EAAE;IAK/B,KAAAC,QAAQ,GAAW,EAAE;EAHmC;EAS/D,IAAWC,QAAQA,CAAA;IACjB,OAAO,IAAI,CAACH,cAAc,CAACI,kBAAkB;EAC/C;EAEAC,KAAKA,CAACH,QAAe,EAAEI,IAAa;IAClCC,OAAO,CAACC,GAAG,CAACN,QAAQ,EAAEI,IAAI,CAAC;IAE3B;EACF;;SArBWR,kBAAkB;;mBAAlBA,MAAkB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAlBd,MAAkB;EAAAe,SAAA;EAAAC,SAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;MCR/BP,EAAA,CAAAS,cAAA,aAAmC;MAIjBT,EAAA,CAAAU,MAAA,YAAK;MAAAV,EAAA,CAAAW,YAAA,EAAO;MAGtBX,EAAA,CAAAS,cAAA,aAAuB;MAEWT,EAAA,CAAAU,MAAA,yBAAkB;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAChDX,EAAA,CAAAY,SAAA,kBAA2H;MAC/HZ,EAAA,CAAAW,YAAA,EAAM;MACNX,EAAA,CAAAY,SAAA,UAAI;MACJZ,EAAA,CAAAS,cAAA,cAAwB;MACbT,EAAA,CAAAU,MAAA,uBAAe;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAC9BX,EAAA,CAAAS,cAAA,cAAwB;MACpBT,EAAA,CAAAY,SAAA,oBAA6F;MAC7FZ,EAAA,CAAAS,cAAA,iBAAgD;MAC5CT,EAAA,CAAAU,MAAA,eACJ;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAEZX,EAAA,CAAAS,cAAA,cAAwB;MACpBT,EAAA,CAAAY,SAAA,qBAA6F;MAC7FZ,EAAA,CAAAS,cAAA,iBAA+C;MAC3CT,EAAA,CAAAU,MAAA,iBACJ;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MAGhBX,EAAA,CAAAY,SAAA,UAAI;MACJZ,EAAA,CAAAS,cAAA,eAAoB;MAC8BT,EAAA,CAAAU,MAAA,cAAM;MAAAV,EAAA,CAAAW,YAAA,EAAS;;;;MApBtDX,EAAA,CAAAa,SAAA,GAAwB;MAAxBb,EAAA,CAAAc,UAAA,UAAAC,GAAA,CAAAC,KAAA,CAAwB;MAMmDhB,EAAA,CAAAa,SAAA,GAAc;MAAdb,EAAA,CAAAc,UAAA,eAAc;MAMfd,EAAA,CAAAa,SAAA,GAAe;MAAfb,EAAA,CAAAc,UAAA,gBAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}