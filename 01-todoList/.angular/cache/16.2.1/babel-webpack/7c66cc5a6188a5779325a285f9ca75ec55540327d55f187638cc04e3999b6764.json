{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let PageLoginComponent = class PageLoginComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = new FormGroup({});\n    this.isSubmitted = false;\n    this.isValid = false;\n    this.messageError = '';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      role: new FormControl('', [Validators.requiredTrue])\n    });\n  }\n  onLogin() {\n    const dataForm = this.loginForm.value;\n    this.isSubmitted = true;\n    this.messageError = '';\n    if (dataForm.email === '') this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>';\n    if (dataForm.password === '') this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n    if (dataForm.role === '') this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n    console.log('- login Data', dataForm);\n    this.authService.login(dataForm).subscribe(response => {\n      console.log('- login AutService: ', response);\n      if (this.authService.isLoggedIn) {\n        this.router.navigate(['/', 'home']);\n      } else {\n        this.messageError += '- Usuario no válido.<br>';\n      }\n    });\n  }\n};\nPageLoginComponent = __decorate([Component({\n  selector: 'page-login',\n  templateUrl: './page-login.component.html'\n})], PageLoginComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","PageLoginComponent","constructor","fb","router","authService","loginForm","isSubmitted","isValid","messageError","ngOnInit","email","required","password","role","requiredTrue","onLogin","dataForm","value","console","log","login","subscribe","response","isLoggedIn","navigate","__decorate","selector","templateUrl"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/page-login/page-login.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: './page-login.component.html'\n})\nexport class PageLoginComponent implements OnInit {\n  constructor(\n    public fb:FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  public loginForm: FormGroup = new FormGroup({});\n\n  public isSubmitted:boolean = false;\n  public isValid: boolean = false;\n  public messageError:string = '';\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup(\n      {\n        email: new FormControl('', [\n          Validators.required\n        ]),\n        password: new FormControl('', [\n          Validators.required,\n        ]),\n        role: new FormControl('', [Validators.requiredTrue])\n      }\n    );\n  }\n\n  onLogin():void{\n    const dataForm    = this.loginForm.value;\n    this.isSubmitted  = true;\n    this.messageError = '';\n\n    if (dataForm.email === '')\n      this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>' ;\n\n    if (dataForm.password === '')\n      this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n\n    if (dataForm.role === '')\n      this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n    \n    console.log('- login Data', dataForm);\n      \n    this.authService.login(dataForm)\n      .subscribe((response: any) => {\n        console.log('- login AutService: ', response);\n\n        if (this.authService.isLoggedIn) {\n          this.router.navigate(['/', 'home'])\n        } else {\n          this.messageError += '- Usuario no válido.<br>';\n        }\n      })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAsBC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAQzE,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC7BC,YACSC,EAAc,EACbC,MAAc,EACdC,WAAwB;IAFzB,KAAAF,EAAE,GAAFA,EAAE;IACD,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAGd,KAAAC,SAAS,GAAc,IAAIP,SAAS,CAAC,EAAE,CAAC;IAExC,KAAAQ,WAAW,GAAW,KAAK;IAC3B,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,YAAY,GAAU,EAAE;EAN5B;EAQHC,QAAQA,CAAA;IACN,IAAI,CAACJ,SAAS,GAAG,IAAIP,SAAS,CAC5B;MACEY,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CACzBE,UAAU,CAACY,QAAQ,CACpB,CAAC;MACFC,QAAQ,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACY,QAAQ,CACpB,CAAC;MACFE,IAAI,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACe,YAAY,CAAC;KACpD,CACF;EACH;EAEAC,OAAOA,CAAA;IACL,MAAMC,QAAQ,GAAM,IAAI,CAACX,SAAS,CAACY,KAAK;IACxC,IAAI,CAACX,WAAW,GAAI,IAAI;IACxB,IAAI,CAACE,YAAY,GAAG,EAAE;IAEtB,IAAIQ,QAAQ,CAACN,KAAK,KAAK,EAAE,EACvB,IAAI,CAACF,YAAY,IAAI,4CAA4C;IAEnE,IAAIQ,QAAQ,CAACJ,QAAQ,KAAK,EAAE,EAC1B,IAAI,CAACJ,YAAY,IAAI,qCAAqC;IAE5D,IAAIQ,QAAQ,CAACH,IAAI,KAAK,EAAE,EACtB,IAAI,CAACL,YAAY,IAAI,2CAA2C;IAElEU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,QAAQ,CAAC;IAErC,IAAI,CAACZ,WAAW,CAACgB,KAAK,CAACJ,QAAQ,CAAC,CAC7BK,SAAS,CAAEC,QAAa,IAAI;MAC3BJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,QAAQ,CAAC;MAE7C,IAAI,IAAI,CAAClB,WAAW,CAACmB,UAAU,EAAE;QAC/B,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;OACpC,MAAM;QACL,IAAI,CAAChB,YAAY,IAAI,0BAA0B;;IAEnD,CAAC,CAAC;EACN;CACD;AAtDYR,kBAAkB,GAAAyB,UAAA,EAJ9B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE;CACd,CAAC,C,EACW3B,kBAAkB,CAsD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}