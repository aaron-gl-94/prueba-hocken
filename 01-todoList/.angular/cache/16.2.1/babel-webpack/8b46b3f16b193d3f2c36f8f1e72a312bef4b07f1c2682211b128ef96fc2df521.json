{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = environment.apiUrl;\n    this.currentUser = {\n      id: '',\n      email: '',\n      username: '',\n      role: 'user'\n    };\n  }\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    return authToken !== null;\n  }\n  Observable() {\n    return this.http.get(`${this.apiUrl}/users/?email=${user.email}&password=${user.password}`);\n  }\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['login']);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","AuthService","constructor","http","router","apiUrl","currentUser","id","email","username","role","getToken","localStorage","getItem","isLoggedIn","authToken","console","log","Observable","get","user","password","logout","removeItem","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { environment } from 'src/environments/environment.development';\nimport { User } from '../interfaces/users.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public apiUrl:string = environment.apiUrl;\n  public currentUser:User = {\n    id: '',\n    email: '',\n    username: '',\n    role: 'user'\n  };\n\n  constructor(private http:HttpClient, private router:Router ) {}\n\n  get getToken() {\n    return localStorage.getItem('auth_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('auth_token');\n    console.log('- isLoggedIn: ', authToken);\n    \n    return authToken !== null;\n  }\n\n  login(user: User)Observable<> {\n    return this.http.get(`${this.apiUrl}/users/?email=${user.email}&password=${user.password}`)\n  }\n\n  logout() {\n    if (localStorage.removeItem('auth_token') == null) this.router.navigate(['login']);\n  }\n}"],"mappings":";AAMA,SAASA,WAAW,QAAQ,0CAA0C;;;;AAOtE,OAAM,MAAOC,WAAW;EAStBC,YAAoBC,IAAe,EAAUC,MAAa;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAR5C,KAAAC,MAAM,GAAUL,WAAW,CAACK,MAAM;IAClC,KAAAC,WAAW,GAAQ;MACxBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;KACP;EAE6D;EAE9D,IAAIC,QAAQA,CAAA;IACV,OAAOC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC3C;EAEA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAClDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;IAExC,OAAOA,SAAS,KAAK,IAAI;EAC3B;EAEiBG,UAAUA,CAAA;IACzB,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACd,MAAM,iBAAiBe,IAAI,CAACZ,KAAK,aAAaY,IAAI,CAACC,QAAQ,EAAE,CAAC;EAC7F;EAEAC,MAAMA,CAAA;IACJ,IAAIV,YAAY,CAACW,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACpF;;SA5BWvB,WAAW;;mBAAXA,MAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX7B,MAAW;EAAA8B,OAAA,EAAX9B,MAAW,CAAA+B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}