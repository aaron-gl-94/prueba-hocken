{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = environment.apiUrl;\n  }\n  get getToken() {\n    return localStorage.getItem('auth_id');\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('auth_tokenz');\n    console.log('- isLoggedIn: ', authToken);\n    return authToken !== null;\n  }\n  login(user) {\n    return this.http.post(`${this.endpoint}/user`, user).subscribe(res => {\n      localStorage.setItem('auth_token', res.token);\n      this.getUserProfile(res._id).subscribe(res => {\n        this.currentUser = res;\n        this.router.navigate(['home']);\n      });\n    });\n  }\n  logout() {\n    if (localStorage.removeItem('auth_id') == null) this.router.navigate(['log-in']);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","AuthService","constructor","http","router","apiUrl","getToken","localStorage","getItem","isLoggedIn","authToken","console","log","login","user","post","endpoint","subscribe","res","setItem","token","getUserProfile","_id","currentUser","navigate","logout","removeItem","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, catchError, of, tap } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { environment } from 'src/environments/environment.development';\nimport { User } from '../interfaces/users.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public apiUrl:string = environment.apiUrl;\n\n  constructor(private http:HttpClient, private router:Router ) {}\n\n  get getToken() {\n    return localStorage.getItem('auth_id');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('auth_tokenz');\n    console.log('- isLoggedIn: ', authToken);\n    \n    return authToken !== null;\n  }\n\n  login(user: User) {\n    return this.http\n      .post<any>(`${this.endpoint}/user`, user)\n      .subscribe((res: any) => {\n        localStorage.setItem('auth_token', res.token);\n\n        this.getUserProfile(res._id).subscribe((res) => {\n          this.currentUser = res;\n          this.router.navigate(['home']);\n        });\n      });\n  }\n\n  logout() {\n    if (localStorage.removeItem('auth_id') == null) this.router.navigate(['log-in']);\n  }\n}"],"mappings":";AAOA,SAASA,WAAW,QAAQ,0CAA0C;;;;AAMtE,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAe,EAAUC,MAAa;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAF5C,KAAAC,MAAM,GAAUL,WAAW,CAACK,MAAM;EAEqB;EAE9D,IAAIC,QAAQA,CAAA;IACV,OAAOC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EACxC;EAEA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACnDG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;IAExC,OAAOA,SAAS,KAAK,IAAI;EAC3B;EAEAG,KAAKA,CAACC,IAAU;IACd,OAAO,IAAI,CAACX,IAAI,CACbY,IAAI,CAAM,GAAG,IAAI,CAACC,QAAQ,OAAO,EAAEF,IAAI,CAAC,CACxCG,SAAS,CAAEC,GAAQ,IAAI;MACtBX,YAAY,CAACY,OAAO,CAAC,YAAY,EAAED,GAAG,CAACE,KAAK,CAAC;MAE7C,IAAI,CAACC,cAAc,CAACH,GAAG,CAACI,GAAG,CAAC,CAACL,SAAS,CAAEC,GAAG,IAAI;QAC7C,IAAI,CAACK,WAAW,GAAGL,GAAG;QACtB,IAAI,CAACd,MAAM,CAACoB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA;IACJ,IAAIlB,YAAY,CAACmB,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,IAAI,CAACtB,MAAM,CAACoB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClF;;SA/BWvB,WAAW;;mBAAXA,MAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX/B,MAAW;EAAAgC,OAAA,EAAXhC,MAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}