{"ast":null,"code":"var _class;\nimport { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class TasksService {\n  constructor() {\n    this.storageTasks = [{\n      idTodo: uuid(),\n      username: 'Aarón García',\n      nameTodo: todo,\n      status: 'new'\n    }];\n    this.username = '';\n    this.nameTodo = '';\n    this.dateInitTodo = new Date();\n    this.loadFromLocalStorage();\n  }\n  loadFromLocalStorage() {\n    if (!localStorage.getItem('storageTasks')) return;\n    this.storageTasks = JSON.parse(localStorage.getItem('storageTasks'));\n  }\n  saveToLocalStorage() {\n    localStorage.setItem('storageTasks', JSON.stringify(this.storageTasks));\n  }\n  resetValues() {\n    this.idTodo = '';\n    this.username = '';\n    this.nameTodo = '';\n    this.status = '';\n    this.dateInitTodo = new Date();\n    this.dateEndTodo = undefined;\n  }\n  addTask(task) {\n    this.storageTasks.push({\n      idTodo: uuid(),\n      dateInitTodo: new Date(),\n      ...task\n    });\n    this.saveToLocalStorage();\n  }\n}\n_class = TasksService;\n_class.ɵfac = function TasksService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["v4","uuid","TasksService","constructor","storageTasks","idTodo","username","nameTodo","todo","status","dateInitTodo","Date","loadFromLocalStorage","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","resetValues","dateEndTodo","undefined","addTask","task","push","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/tasks/services/tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\n\nimport { ToDo } from '../interfaces/todos.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  public storageTasks: ToDo[] = [\n    {\n      idTodo: uuid();\n      username: 'Aarón García',\n      nameTodo: todo,\n      status: 'new'\n    }\n  ];\n  \n  public idTodo?: string;\n  public username: string = '';\n  public nameTodo: string = '';\n  public status?: 'new' | 'end' | 'delete' | '';\n  public dateInitTodo?: Date = new Date();\n  public dateEndTodo?: Date;\n\n\n  constructor() {\n    this.loadFromLocalStorage()\n  }\n\n  private loadFromLocalStorage() {\n    if (!localStorage.getItem('storageTasks')) return;\n\n    this.storageTasks = JSON.parse(localStorage.getItem('storageTasks')!)\n  }\n\n  private saveToLocalStorage() {\n    localStorage.setItem('storageTasks', JSON.stringify(this.storageTasks));\n  }\n\n  public resetValues():void {\n    this.idTodo    = '';\n    this.username  = '';\n    this.nameTodo  = '';\n    this.status    = '';\n    this.dateInitTodo = new Date();\n    this.dateEndTodo = undefined;\n  }\n\n  public addTask(task: ToDo): void {\n    this.storageTasks.push({idTodo: uuid(), dateInitTodo: new Date(), ...task})\n\n    this.saveToLocalStorage();\n  }\n}\n"],"mappings":";AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAOjC,OAAM,MAAOC,YAAY;EAmBvBC,YAAA;IAjBO,KAAAC,YAAY,GAAW,CAC5B;MACEC,MAAM,EAAEJ,IAAI,EAAE;MACdK,QAAQ,EAAE,cAAc;MACxBC,QAAQ,EAAEC,IAAI;MACdC,MAAM,EAAE;KACT,CACF;IAGM,KAAAH,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IAErB,KAAAG,YAAY,GAAU,IAAIC,IAAI,EAAE;IAKrC,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEQA,oBAAoBA,CAAA;IAC1B,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;IAE3C,IAAI,CAACV,YAAY,GAAGW,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,CAAC;EACvE;EAEQG,kBAAkBA,CAAA;IACxBJ,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACf,YAAY,CAAC,CAAC;EACzE;EAEOgB,WAAWA,CAAA;IAChB,IAAI,CAACf,MAAM,GAAM,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAI,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAI,EAAE;IACnB,IAAI,CAACE,MAAM,GAAM,EAAE;IACnB,IAAI,CAACC,YAAY,GAAG,IAAIC,IAAI,EAAE;IAC9B,IAAI,CAACU,WAAW,GAAGC,SAAS;EAC9B;EAEOC,OAAOA,CAACC,IAAU;IACvB,IAAI,CAACpB,YAAY,CAACqB,IAAI,CAAC;MAACpB,MAAM,EAAEJ,IAAI,EAAE;MAAES,YAAY,EAAE,IAAIC,IAAI,EAAE;MAAE,GAAGa;IAAI,CAAC,CAAC;IAE3E,IAAI,CAACP,kBAAkB,EAAE;EAC3B;;SA9CWf,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAwB,OAAA,EAAZxB,MAAY,CAAAyB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}