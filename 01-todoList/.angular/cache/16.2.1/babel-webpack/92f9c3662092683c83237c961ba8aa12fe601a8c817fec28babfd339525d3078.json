{"ast":null,"code":"var _class;\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tasks.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../tasks/components/list-tasks/list-tasks.component\";\nimport * as i4 from \"../../tasks/components/new-task/new-task.component\";\nexport class PageHomeComponent {\n  get newTodos() {\n    return this.onGetTodosbyStatus('new');\n  }\n  get endTodos() {\n    return this.onGetTodosbyStatus('end');\n  }\n  get removedTodos() {\n    return this.onGetTodosbyStatus('removed');\n  }\n  constructor(tasksService, activatedRoute) {\n    this.tasksService = tasksService;\n    this.activatedRoute = activatedRoute;\n    this.username = 'Aarón';\n  }\n  ngOnInit() {\n    this.activatedRoute.params.pipe(switchMap(({\n      status\n    }) => this.tasksService.getToDosByStatus(status))).subscribe(hero => {\n      return;\n    });\n  }\n  addToDo(todo) {\n    let newTodo = {\n      userId: '',\n      nameTodo: todo,\n      status: 'new'\n    };\n    this.tasksService.addTask(newTodo);\n  }\n  removeToDo(id) {\n    this.tasksService.removeToDo(id);\n  }\n  removeToDoAll() {\n    this.tasksService.removeAllToDos();\n  }\n  updateToDo(todo) {\n    console.log(todo);\n    this.tasksService.updateToDo({\n      ...todo\n    });\n  }\n  updateAllTodos(status) {\n    this.tasksService.updateAllToDos(status);\n  }\n  resetAll() {\n    this.tasksService.resetToDos();\n  }\n}\n_class = PageHomeComponent;\n_class.ɵfac = function PageHomeComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-home\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[1, \"row\", \"pt-5\"], [1, \"col\", \"mx-auto\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md\"], [3, \"onDebounce\"], [3, \"newTodos\", \"endTodos\", \"removedTodos\", \"onRemoveTodo\", \"onRemoveAll\", \"onUpdateToDo\", \"onUpdateAll\", \"onReset\"]],\n  template: function PageHomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"b\");\n      i0.ɵɵtext(7, \"Bienvenid@: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(10, \"task-new\", 7);\n      i0.ɵɵlistener(\"onDebounce\", function PageHomeComponent_Template_task_new_onDebounce_10_listener($event) {\n        return ctx.addToDo($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"task-lists\", 8);\n      i0.ɵɵlistener(\"onRemoveTodo\", function PageHomeComponent_Template_task_lists_onRemoveTodo_11_listener($event) {\n        return ctx.removeToDo($event);\n      })(\"onRemoveAll\", function PageHomeComponent_Template_task_lists_onRemoveAll_11_listener() {\n        return ctx.removeToDoAll();\n      })(\"onUpdateToDo\", function PageHomeComponent_Template_task_lists_onUpdateToDo_11_listener($event) {\n        return ctx.updateToDo($event);\n      })(\"onUpdateAll\", function PageHomeComponent_Template_task_lists_onUpdateAll_11_listener($event) {\n        return ctx.updateAllTodos($event);\n      })(\"onReset\", function PageHomeComponent_Template_task_lists_onReset_11_listener() {\n        return ctx.resetAll();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\" \", ctx.username, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"newTodos\", ctx.newTodos)(\"endTodos\", ctx.endTodos)(\"removedTodos\", ctx.removedTodos);\n    }\n  },\n  dependencies: [i3.TasksListsComponent, i4.NewTaskComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["switchMap","PageHomeComponent","newTodos","onGetTodosbyStatus","endTodos","removedTodos","constructor","tasksService","activatedRoute","username","ngOnInit","params","pipe","status","getToDosByStatus","subscribe","hero","addToDo","todo","newTodo","userId","nameTodo","addTask","removeToDo","id","removeToDoAll","removeAllToDos","updateToDo","console","log","updateAllTodos","updateAllToDos","resetAll","resetToDos","i0","ɵɵdirectiveInject","i1","TasksService","i2","ActivatedRoute","selectors","decls","vars","consts","template","PageHomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PageHomeComponent_Template_task_new_onDebounce_10_listener","$event","PageHomeComponent_Template_task_lists_onRemoveTodo_11_listener","PageHomeComponent_Template_task_lists_onRemoveAll_11_listener","PageHomeComponent_Template_task_lists_onUpdateToDo_11_listener","PageHomeComponent_Template_task_lists_onUpdateAll_11_listener","PageHomeComponent_Template_task_lists_onReset_11_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/page-home/page-home.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/page-home/page-home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TasksService } from '../../services/tasks.service';\nimport { Status, ToDo } from 'src/app/interfaces/todos.interface';\nimport { switchMap } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: './page-home.component.html'\n})\nexport class PageHomeComponent {\n  public username: string = 'Aarón';\n\n  public get newTodos(): ToDo[] {\n    return this.onGetTodosbyStatus('new');\n  }\n  public get endTodos(): ToDo[] {\n    return this.onGetTodosbyStatus('end');\n  }\n\n  public get removedTodos(): ToDo[] {\n    return this.onGetTodosbyStatus('removed')\n  }\n\n  constructor(private tasksService: TasksService, private activatedRoute: ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n      .pipe(\n        switchMap(({ status }) => this.tasksService.getToDosByStatus(status)),\n      )\n      .subscribe(hero => {\n        return;\n      })\n  }\n\n  addToDo(todo:string): void {\n    let newTodo:ToDo = {\n      userId: '',\n      nameTodo: todo,\n      status: 'new'\n    }\n\n    this.tasksService.addTask(newTodo);\n  }\n\n  removeToDo(id: string): void {\n    this.tasksService.removeToDo(id);\n  }\n\n  removeToDoAll(): void {\n    this.tasksService.removeAllToDos();\n  }\n\n  updateToDo(todo:any): void {\n    console.log(todo);\n    \n    this.tasksService.updateToDo({...todo});\n  }\n\n  updateAllTodos(status:Status): void {\n    this.tasksService.updateAllToDos(status);\n  }\n\n  resetAll(): void {\n    this.tasksService.resetToDos();\n  }\n}\n","<div class=\"row pt-5\">\n    <div class=\"col mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-2\">\n                        <b>Bienvenid@: </b>\n                    </div>\n                    <div class=\"col-md\">\n                        {{username}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<task-new (onDebounce)=\"addToDo($event)\"></task-new>\n\n<task-lists\n    [newTodos]=\"newTodos\"\n    [endTodos]=\"endTodos\"\n    [removedTodos]=\"removedTodos\"\n    (onRemoveTodo)=\"removeToDo($event)\"\n    (onRemoveAll)=\"removeToDoAll()\"\n    (onUpdateToDo)=\"updateToDo($event)\"\n    (onUpdateAll)=\"updateAllTodos($event)\"\n    (onReset)=\"resetAll()\"\n></task-lists>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}