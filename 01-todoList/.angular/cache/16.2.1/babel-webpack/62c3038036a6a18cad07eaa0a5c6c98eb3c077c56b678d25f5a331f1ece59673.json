{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction PageLoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19);\n    i0.ɵɵelement(2, \"span\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.messageError, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class PageLoginComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = new FormGroup({});\n    this.isSubmitted = false;\n    this.isValid = false;\n    this.messageError = '';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(8)]),\n      role: new FormControl('', [Validators.requiredTrue])\n    });\n  }\n  onLogin() {\n    const dataForm = this.loginForm.value;\n    this.isSubmitted = true;\n    this.messageError = '';\n    if (dataForm.email === '') this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>';\n    if (dataForm.password === '') this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n    if (dataForm.role === '') this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n    console.log('- login Data', dataForm);\n    if (dataForm.valid) {\n      this.authService.login(dataForm).subscribe(response => {\n        console.log('- Login', response);\n        this.router.navigate(['/', 'home']);\n      });\n    } else {\n      return false;\n    }\n  }\n}\n_class = PageLoginComponent;\n_class.ɵfac = function PageLoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-login\"]],\n  decls: 33,\n  vars: 3,\n  consts: [[1, \"col-md-4\", \"mx-auto\", \"pt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group-sm\", \"pt-1\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"correo@ejemplo.com\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [1, \"text-center\"], [1, \"form-check\", \"form-check-inline\"], [\"formControlName\", \"role\", \"type\", \"radio\", \"id\", \"roleAdmin\", \"name\", \"role\", \"value\", \"admin\", \"required\", \"\", 1, \"form-check-input\"], [\"for\", \"roleAdmin\", 1, \"form-check-label\"], [\"formControlName\", \"role\", \"type\", \"radio\", \"id\", \"roleUser\", \"name\", \"role\", \"value\", \"user\", \"required\", \"\", 1, \"form-check-input\", 3, \"checked\"], [\"for\", \"roleUser\", 1, \"form-check-label\"], [4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [3, \"innerHTML\"]],\n  template: function PageLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function PageLoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Correo Electr\\u00F3nico:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\");\n      i0.ɵɵtext(17, \"Rol de usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 11);\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵelementStart(22, \"label\", 13);\n      i0.ɵɵtext(23, \" Administrador \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 11);\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementStart(26, \"label\", 15);\n      i0.ɵɵtext(27, \" Usuario \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(28, \"hr\");\n      i0.ɵɵtemplate(29, PageLoginComponent_div_29_Template, 3, 1, \"div\", 16);\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"button\", 18);\n      i0.ɵɵtext(32, \"Entrar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.loginForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","messageError","ɵɵsanitizeHtml","PageLoginComponent","constructor","fb","router","authService","loginForm","isSubmitted","isValid","ngOnInit","email","required","password","minLength","maxLength","role","requiredTrue","onLogin","dataForm","value","console","log","valid","login","subscribe","response","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","PageLoginComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","PageLoginComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","PageLoginComponent_div_29_Template","invalid"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/page-login/page-login.component.ts","/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/pages/page-login/page-login.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: './page-login.component.html'\n})\nexport class PageLoginComponent implements OnInit {\n  constructor(\n    public fb:FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  public loginForm: FormGroup = new FormGroup({});\n\n  public isSubmitted:boolean = false;\n  public isValid: boolean = false;\n  public messageError:string = '';\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup(\n      {\n        email: new FormControl('', [\n          Validators.required,\n          Validators.email\n        ]),\n        password: new FormControl('', [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(8)\n        ]),\n        role: new FormControl('', [Validators.requiredTrue])\n      }\n    );\n  }\n\n  onLogin():any{\n    const dataForm    = this.loginForm.value;\n    this.isSubmitted  = true;\n    this.messageError = '';\n\n    if (dataForm.email === '')\n      this.messageError += '- Debe agregar su \"Nombre de usuario\".<br>' ;\n\n    if (dataForm.password === '')\n      this.messageError += '- Debe agregar su \"Contraseña\".<br>';\n\n    if (dataForm.role === '')\n      this.messageError += '- Debe selecionar una opción de \"Rol\"<br>';\n    \n    console.log('- login Data', dataForm);\n\n\n    if (dataForm.valid) {\n      this.authService.login(dataForm)\n        .subscribe((response: any) => {\n          console.log('- Login', response);\n          this.router.navigate(['/', 'home'])\n        })\n    } else {\n      return false;\n    }\n  }\n}\n","<div class=\"col-md-4 mx-auto pt-5\">\n    <div class=\"card\">\n        \n        <div class=\"card-header\">\n            <h3>Login</h3>\n        </div>\n\n        <div class=\"card-body\">\n\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n                <div class=\"form-group-sm pt-1\">\n                    <label for=\"email\">Correo Electrónico:</label>\n                    <input formControlName=\"email\" type=\"text\" name=\"email\" id=\"email\" class=\"form-control form-control-sm\" placeholder=\"correo@ejemplo.com\" required>\n                </div>\n\n                <div class=\"form-group-sm pt-1\">\n                    <label for=\"password\">Password:</label>\n                    <input formControlName=\"password\" type=\"password\" name=\"password\" id=\"password\" class=\"form-control form-control-sm\"\n                        placeholder=\"Contraseña\" required>\n                </div>\n                \n                <div class=\"form-group-sm pt-1\">\n                    <label>Rol de usuario:</label>\n                    <br>\n                    <div class=\"text-center\">\n                        <div class=\"form-check form-check-inline\">\n                            <input formControlName=\"role\" type=\"radio\" id=\"roleAdmin\" name=\"role\" value=\"admin\" class=\"form-check-input\" required>\n                            <label class=\"form-check-label\" for=\"roleAdmin\">\n                                Administrador\n                            </label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input formControlName=\"role\" type=\"radio\" id=\"roleUser\" name=\"role\" value=\"user\" class=\"form-check-input\" required [checked]>\n                            <label class=\"form-check-label\" for=\"roleUser\">\n                                Usuario\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n                <div *ngIf=\"isSubmitted && loginForm.invalid\">\n                    <div class=\"alert alert-danger\">\n                        <span [innerHTML]=\"messageError\"></span>\n                    </div>\n                </div>\n                <div class=\"d-grid\">\n                    <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">Entrar</button>\n                </div>\n            </form>\n\n        </div>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}