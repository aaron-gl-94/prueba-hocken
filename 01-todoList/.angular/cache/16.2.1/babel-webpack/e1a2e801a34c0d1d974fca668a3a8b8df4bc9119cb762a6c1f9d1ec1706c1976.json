{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.storageUserSession = [];\n    this.userSession = {\n      userId: '',\n      username: '',\n      role: false\n    };\n    this._loadUserFromStorage();\n  }\n  _loadUserFromStorage() {\n    console.log('_loadUserFromStorage()');\n    if (!localStorage.getItem('storageUsersSessions')) return;\n    this.storageUserSession = JSON.parse(localStorage.getItem('storageUsersSessions'));\n  }\n  _saveUserToStorage() {\n    console.log('_saveUserToStorage()');\n    this.storageUserSession.push(this.userSession);\n    localStorage.setItem('storageUsersSessions', JSON.stringify(this.userSession));\n  }\n  _setUserSession(userData) {\n    console.log('_setUserSession()');\n    this.userSession = {\n      ...userData\n    };\n  }\n  _removeUserSession(username) {\n    console.log('_removeUserSession()');\n    this.storageUserSession = this.storageUserSession.filter(storageUsers => storageUsers.username !== username);\n  }\n  login(userLogin) {\n    console.log(userLogin);\n    if (!this.userSession.userId) {\n      this._setUserSession(userLogin);\n      this._saveUserToStorage();\n    }\n    this._setUserSession({\n      ...userLogin\n    });\n    console.log(this.userSession);\n  }\n  logout(username) {\n    this._removeUserSession(username);\n  }\n}\n_class = SessionService;\n_class.ɵfac = function SessionService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","storageUserSession","userSession","userId","username","role","_loadUserFromStorage","console","log","localStorage","getItem","JSON","parse","_saveUserToStorage","push","setItem","stringify","_setUserSession","userData","_removeUserSession","filter","storageUsers","login","userLogin","logout","factory","ɵfac","providedIn"],"sources":["/Users/aarongl/Developer/PruebasTecnicas/1-todoList/src/app/services/session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\nimport { UserLogin, UserSession } from '../interfaces/users.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  public storageUserSession: UserSession[] = [];\n\n  public userSession: UserSession = {\n    userId: '',\n    username: '',\n    role: false\n  };\n\n  constructor() {\n    this._loadUserFromStorage();\n  }\n\n  private _loadUserFromStorage():void {\n    console.log('_loadUserFromStorage()');\n    \n    if (!localStorage.getItem('storageUsersSessions')) return;\n\n    this.storageUserSession = JSON.parse(localStorage.getItem('storageUsersSessions')!)\n  }\n\n  private _saveUserToStorage():void {\n    console.log('_saveUserToStorage()');\n\n    this.storageUserSession.push(this.userSession);\n    \n    localStorage.setItem('storageUsersSessions', JSON.stringify(this.userSession));\n  }\n\n  private _setUserSession(userData:UserSession):void {\n    console.log('_setUserSession()');\n    \n    this.userSession = {...userData };\n  }\n\n  private _removeUserSession(username:string):void {\n    console.log('_removeUserSession()');\n    \n    this.storageUserSession = this.storageUserSession.filter(storageUsers => storageUsers.username !== username);\n  }\n  \n  public login(userLogin:UserLogin):void {\n    console.log(userLogin);\n\n    if (!this.userSession.userId) {\n      this._setUserSession(userLogin);\n      this._saveUserToStorage();\n    }\n\n    this._setUserSession({...userLogin});\n\n    console.log(this.userSession);\n  }\n\n  public logout(username: string):void {\n    this._removeUserSession(username);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAUzBC,YAAA;IARO,KAAAC,kBAAkB,GAAkB,EAAE;IAEtC,KAAAC,WAAW,GAAgB;MAChCC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;KACP;IAGC,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEQA,oBAAoBA,CAAA;IAC1BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IAErC,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC,EAAE;IAEnD,IAAI,CAACT,kBAAkB,GAAGU,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAE,CAAC;EACrF;EAEQG,kBAAkBA,CAAA;IACxBN,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,IAAI,CAACP,kBAAkB,CAACa,IAAI,CAAC,IAAI,CAACZ,WAAW,CAAC;IAE9CO,YAAY,CAACM,OAAO,CAAC,sBAAsB,EAAEJ,IAAI,CAACK,SAAS,CAAC,IAAI,CAACd,WAAW,CAAC,CAAC;EAChF;EAEQe,eAAeA,CAACC,QAAoB;IAC1CX,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhC,IAAI,CAACN,WAAW,GAAG;MAAC,GAAGgB;IAAQ,CAAE;EACnC;EAEQC,kBAAkBA,CAACf,QAAe;IACxCG,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,IAAI,CAACP,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACmB,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACjB,QAAQ,KAAKA,QAAQ,CAAC;EAC9G;EAEOkB,KAAKA,CAACC,SAAmB;IAC9BhB,OAAO,CAACC,GAAG,CAACe,SAAS,CAAC;IAEtB,IAAI,CAAC,IAAI,CAACrB,WAAW,CAACC,MAAM,EAAE;MAC5B,IAAI,CAACc,eAAe,CAACM,SAAS,CAAC;MAC/B,IAAI,CAACV,kBAAkB,EAAE;;IAG3B,IAAI,CAACI,eAAe,CAAC;MAAC,GAAGM;IAAS,CAAC,CAAC;IAEpChB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,WAAW,CAAC;EAC/B;EAEOsB,MAAMA,CAACpB,QAAgB;IAC5B,IAAI,CAACe,kBAAkB,CAACf,QAAQ,CAAC;EACnC;;SAzDWL,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAA0B,OAAA,EAAd1B,MAAc,CAAA2B,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}